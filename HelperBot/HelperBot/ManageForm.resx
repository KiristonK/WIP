<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyBotIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyBotIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACaFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAF2FJ
        REFUeNrtnXt0FdW9xz/nnOTk/Q5JCI8AIcpLnlFEi7Sg2Np6q1ddWou1rbVaVy/LllrvXba37bXFsrqU
        5fW2vb0ttbW1S9BasELFFnkoSOUhIIRHCBoCgSTk/TxJzjn3j1BKzplzzp6cmdkzZ+az/8pkzsxv7/2d
        2bP3/u3fdmE/krmST7KQ6YzDSxc17GMbW6knINs0B/2ZyHc5QA/By1KAFrZwPzmyjXPQFw83sY2BYZX/
        z9TGLyiXbaKDfri5nRMRKn8oDbKJ6bLNdNCLxRyPWv1DjcEfGSPbUAc9GMubMas/SJB+VpIq21gHrXGz
        gj4hAQQ5zULZ5jpozUTeE6z+IEGeI0W2wUbhlm2AQVzPNBVnL2GibIONwh4CSKaSDBXnj2WmbJONwh4C
        yGKyrudbGHsIwEu+yl8UkyTbaGOwhwBcuFT+IskmJWOTbAZVT/N00C/baGOwhwB6OKfqfD9Nsk02CnsI
        oItjqs5v44hsk43CHgII8C4tKs6v5rBsk43CHgKA99gjfO4gGzkv22AHrbmXNsGB4PdVjRo6WIQcfoVf
        oPpb+ZLqTqODJZjMGwRiVH83K8mUbaiDXszkzxEdwoacwlaSJ9tIBz2ZwLN0Kla+n8M8RJZsAx30poy9
        igI4zsds0ye6DPtluZ8BxePNnLTjugD7CSAS6ieMEgJHADbHEYDNcQRgcxwB2BxHADbHEYDNcQRgcxwB
        2Bw7CsCl4mjCYxPv98voYzvnCYYcdXGcPtmmycB+uneRoSj7QbrDZOHg4ODg4ODgkKDY7yNwCDdJePGQ
        BAzip59BO7qD2EcALtLIJINCRlNCLgVkkU06aUAvPXTQSTNtnOccF+imi1579AkSWwAuMshnLOVMYgIT
        KSGLdNJIVhwACzBALz10cp4P+YhT1HCGlsTuHiamANxkUcJMpjCF6RSTRbrqnAbpoZMGjnCMYxziPJ2J
        2EgkmgC8FDODecxlOqPJ1CR/Qbo4xxH2s4/DNCRW5IDEEUAq46jkeuYziRw8OtzBTzun+Ds72Utdogwc
        J4IAvJQynyVcz3hDlnV1cZqdbOHv1Fv/bWBtAbjIYx63sIjJhq/p6eQk29nEPlqt/JFoXQG4KWMxn+Va
        CqXlIsgFdrOBt6hNxA9E8+KmnBXsCdn2QVbqYQ8rKLelb4UEXIznm+zBJ73iL08+9vBNxlv4jWoR8ljG
        duG438amPrazjFzZRZS4eLiOl4QDvchJbfyBBbp0Qm1PId/gRMwIH/JTgBN8g0LZxZVYuJjDS3RLr1zR
        1M1LzHG+B7QihTvYb4Fnf/h7YD932GfbCT3J4VvUS6/QkaR6vuXsRBgvJaymQ3pVjjR1sJoS2UVoZcp5
        0WT9fbXJx4vOZpQjZTKvCoV2NHfy86p99h/RksSoftNLwKxdlXJ+wmd1Gl3300s//fQzePFIEl68eEnT
        aQgnwAYeo0ansooLcwqglJ9wj6bVP0A77dRRRz2NNNBCGx30XvxvGtnkkk8xRZQyjnHkkEOyhvcP8BKP
        UW9gGQpixsWh+XyHuzSq/m4ucJIjVHOcWtropjfqxK2bNDLIpYwrqWA6kylUteFc5OveRQvfpc2IAlSD
        +d4AqTzGv5Me51X8tFDNXvZyiLO0RwgOGZ1kchjDTCqppIL8uJuHLlayOlFcyfTCzX00xfXJFaCJrXyX
        xYzW6CWezGgW8wN20BTneGQDyxyvgegs4EgcBdzDAZ5hKcU6FLOHEpaymkNxuaEcYYHsIjYzY3l9xEXb
        zps8zGS8ulropYKH+RvtI7bzdcbKLmazkspT9I+oUDtYz90UG/RF46KEu/lzhLDzsVI/T5Equ6jNya0j
        mvTp4W/cJ2H+fRT3sYXeEVhcz62yi9qMTGK76qL0c5hHKZVm8xi+RdUIxiu3M0l2cZsNL09G3cxF+cX/
        a2ZLdr/yMJffqm4MBnhS528Vy/EJalUW4gkeMYkDZh6PcEKl9bV8QrbZZiKPtSpf/Vv5uIlcLz18nK0q
        m4K1zvZU/+Tzqnx9ffyeCtkmh1HB71X5LrTxedkmm4WxvKWi4PpZw2jZJisymjWqurFvOSMCQzysYmyt
        j5+ZtPpBrQR6eFi2wWZgHDtUtP2/o1i2wVEp5Q8qvgV2ME62wfJR8/xvNq9nzSUq2Oy8A8QZzTbh4qri
        OtnmCnE9x4XztM3EDZohLBMeRGnjQYtMpbp5WHiyqJNlss2VSR7rhZ+V5y20yCKXF4Tztd7O4wE30iBY
        TMe5RraxqriOGsGcNXCjTENlvlS93EqR0Jn9/Jb9Ei1Vz3v8RtANrYhb7TovcAWHBJ+SPRZcXTOZPYK5
        O8QV8syU+QZYJDig289aPpRo58g4xVrBIHIVLJJtrAyyeVnwCTnMVNnGjoipVAnm8GWyZRkp7w0wmUqh
        84K8Yc41NTGpYbPgmZXyBrjkCeAGwamQJjZaNB5nP6/RKHTmWG6QZaQsAWTzMcFVSfs5JMnG+PmAg0Ln
        JfExWY2ALAFMYK7QeYNsoVmSjfHTzDb8QmfOleUlKGtt4HzBMfAL7I7wHw95ZJNJD120SGgkMsgnAxfd
        tNGJcrTgIG9zQWj+cjRXc8DwPCBLAKlcLegbf5KTCke9zObTLGAiKQxwnn28zi66DLO/hJtZwkxycdHB
        UXawkY8URVBNtZAAUrma39ln3eBY4UGSZxXW9xXxHU4Om3UP0MD/GjSc4uEm/kLXMCt97OIeRUkn86zw
        YJeN/IMW0yhUKD08EPbbUn6juBzDzxau1t3yJJZxMsKY/gpFCTwguHikkcWyq8U4VjAoVCj1zA/5ZRbP
        Rlk/8AYTdbb8piiTPE3cr/BRfT3nhPI6yArZ1WIUaawRfC0eZHzIbz9Ha5TzB/iRrhMrJfwlxqj+9LDf
        lAnPeKwhzfjKkNENzGOG4Jmn6Bj2dyFfiLoYJIm7dB02/lSMAZup3BZWoh3UCl59hgzPABkCGMsYwTNP
        h3zZT2NOjF+UsVA3uzNYEiNySRI3h01wdwkLYIyMz0AZArhSeElXw6U4XkPMoSDGL7zM0m3xdUFM+cGk
        MD/fARoEr5/LlTpZHgUZAqgQDLvUT0vIkVEC4xajdBNAjsDGVOkKvf5mwWGqDBnrnYwXQAYTBM/0hQjA
        JRTzx6tbnlIEruxSkGgLPsE7TNAkIpkqjBdApnBXLRDiVBUUCrKm37Bwq0BF9tMadswnOB8AEw3Z93AY
        xgsgO46ADidCegXhBKmhWyfL2wX8Epo4E8cdSo2fEzReAKOFX3PusFf+fk7F+M0F3kGvbRybeTvm7oDv
        KkQDzRQOV5dh/DIRGQIQDQKZQn7IkTrWh/QLQtnBXt0sD7KR41HPaOCVS+Fn/0m28OBUhnAHWTOMF0CR
        8Fe6N6zTN8iL7Izyixp+qtAGa8chfhWlgRlkLe8oHC8UfgOkGr/01XgB5KuI3zkhTCwn+T6HI5zdwCre
        1tX2QZ7ntxEmbf1s4BkFeaSqWAGcZJKgNzriYbXgyHiQINsVngg3i9gSFovDTxXLDNmkqYgfKaxnauf/
        IvRuilVFP1ttosA3uuDl5yqK42yEwKplfJt3uYCPAP20cYRnmGNY0aVzC2v5iG4G8dNDPRu5N+Kze52q
        6Ic/N3qVkPEeQWq+0UexgHcVjtfyNC8yg0nk0sVZDlMrPNgSPz1s4h3KmUERSTRyjBO0RMzX9YzSqXQs
        iZefqXgegvzN5BFBYlHCVlX5/ZnRbwCzr7i/hk/KNiEubmaebBOiY3YBZPEAZbKNGDGT+IrABJJUzC4A
        uJavGz9CrglZLOda2UbEwvwCSOZBvibDWSpOMvgaXzTlnkzDML2BQA6PE+SXtMs2RJXNj/CYFYLaWEEA
        UMB/UsFzVMWcjImNFy8ppJBCNjnkAm2004EPHz76NZhM9jCNr/M5s7f+Q1hDAEMfg/P5A5uoUZhuiYSH
        NFJJJZ18CimggFzyySefPPJJwUsK4KMfHy200kILLbTRTDMXaKGHPvroFZ7Ph3TK+RT3MdUqI3pWEQB4
        mMVUvsS7HOQoNbTRQ/+wqnFf3AE0lQzGMI5SiiimiCJySCGVFFKEqsWPDx99+GinkUYaaKSeOs7STd/F
        HUcDwyzzkk4ek5jKXBZQZqWYP9YRAICXKUxhgA4aqaWeZrpxMYgbN0HSyCb74rOeSQZpI/zE9ZAeMmUd
        oJduui6+FzrooBcXAQIkESSDAsYwgUKyNd1t1BCsJYAhkimgwNCwMW4yyKAoETd6MX830EFXHAHYHEcA
        NscRgM1xBGBzHAHYHEcANscRgM1xBGBzHAHYHEcA5sJwr2Aj5wLSyCI38de+xEUBk2ihU8WUd5y4DLlL
        NlO4mjlUMJoSazhKSKKLBs5SzSH+ztGYi+E1QH8BFHITt7GAYivNkktngAZ2sZ6/ckHfG+krgDQW8yCf
        kLcfhsXpYCu/5C3jGgRtKWWlYJRMJ0VO51gZR0wViczglbA1vE4aSfLxinBoTdXo5bo4m9XcYkl/I/Ph
        YSpTOMR5fS6uB5N5mhsN6mHYARcTmMBuPaKf6CGAPH7IHc4Qk6a4mEgWb2u/pYT2AvDwFZYbEqvDXri5
        gkb2ofFYofYCmMlK42Nd2QIvZbwjHHlYEK1f1F6WWXSfTyswlWVaD6dpLYCrFCLmO2iFm88yTdtLattR
        c7FU901bjKGXwxyigRxmMStk9iJII3s5zgATqGRCSDPq4zjvc5YMZjBX8y0gJrKUg1p/B2hHIZulD5to
        kT5kBRNIxUUypXyZg5f9b4CN3EQeHtxkMpv/oe2y/57ne1SQhoskiriTnQQ0tu1NCmVXc2QqqZNeefGn
        M9w57Kl2seiSBAK8EhLuPovv0X3xvxf4akj/Zy47NLauTnDTbSncf6korJsG+EHYEk8XX6aDIEGOK2xN
        N4r1F8XxU4VA2J9RCCsZT+rmfi2rTNsPtjLhQNDm5SNeCdmnYGgL+6FtoN9U2A66iT/SDTSwTiFU7NuK
        8YNHTrq2QbO0FECyqpCIZqWaswpHmzgI9PK+YgSRfTQDZxS3uW2PGNt4pIzSchG6lgLwJoS7V3vY8w8w
        QCvK+4EA9DIIdEQIL9McI8S9WrLMKoBki4ZzG06u4lCLl0LAG6Fbl0ESkBthALxQ4862pmEonEGbUKYo
        trFFzALSqFSs5HkUAOOYovC/fIHN5tTh0nKe1RFAKGO5Pewd4OIzzATgZuaG/aKUe8gARnGXgsPrYq6T
        nSWjyOVP0jtxWqSzLBv2knVzI0cv/ff1kN398lh1aX/wVh4dFtLSxTXs1ty+P2n5raXlbGAqtym+BK1G
        FteSQgN9uPAyhnv5/mX5KmcGbbTgx0MGs/kPvnip85tKJdk00gMkU8y/8iTzNHeMOcYG7fwCtDQul+e5
        TePMysJHDfvpIJ2rmBo2utHMQU7ip4R5jA1pRgeoZT8XSGEaM3RZA7GeLwntoCiE47WnTArTosy7FbCY
        xRH+l8xkJss2XxznI9DmOAKwOY4AbI4jAJvjCMDmOAKwOY4AbI4jAJvjCMDmOAKwOfoLwEcbpvVjNzVB
        2vTfEVl/AVSxnF9QRZfud0okuqji5/wbVXrfSP/JoD7+yjrGU8ksrmAMFZqvlkkkWjnBGU5ykL3Uks8j
        et9QfwG4cOGjmmrWkUkOP2KZ7ve0Lht5gja6L+6GpqnzlzJGTgf7aaeXTgPvaD06Oa/B1pUqcHoBNscR
        gM1xBGBzHAHYHEcANscRgM1xBGBzHAHYHEcANscRgM1xBGBzjBaAS7cA9YmB1+gaMVoAKQkRRkY/co0O
        s220ANzO1lFR8Ri9y4LRAhhwPIOi0qNxQKmYGC8Axx8gGh2KMcp0xGgB+PV3c7Q0fYn+BvDTZPAdrUXT
        RWcwwzB+HKBB+31vEoY+rfcDiY3xAjhPj+H3tAo9+mwNFw3jBXBWIaCywxDdinGKdUVGE2B4Ji3DWTs0
        Aa0cMfyeVuGIHltDRsd4AfRxzOgvXYvg55jxH8gyZgMPGK9zS9DKAeNvKkMAVdRIuKv5qdF/KWg4MgTQ
        yC4JdzU/u2g0/qYyBDDITtol3NfctLPT6GFgkOURtFvzfXSsz2F2y7itlgIICkcCqWeT0xMYhp9N1Aue
        K17OAmgpALfiYnOPghNYkM3Uanhn61PLZoVq9Sg60CVpWWvaeeiN5ovcTnbY8XTcfBTW8WujXGELRvvy
        Ei+GfQGU8zBLh+1AMkQmA3xoLscaF1fz2qWNU8L34tzGkjCpLeS09M1hzJLquCGkdDzcxHYGIpzfy3oq
        jXYei8bH2RNjk+Tj3B7y4kplteYbK1szBfhvUoeVjZvbORHjN3tYJLva/8F03hXI5lEWhvxuLsekF74Z
        0rGwncgWXrZJVeT0TpQ9TQwkh18LPsmbKB32Sw+PRWw27JN6eSykeSxlk9AvA/yaHNnVD3fQIpzV5SHN
        gGhWEzmFPhZulgs/Fi3cIbv6c1inIrO7GBvy+6U2/xQ8zdKQEhnLLhW/XxfvOyDeHuVUFqg4exrXhBzZ
        ynM2dhHr4Tm2hhy7RlXLfi1XxmdCvAKYQ5GKs3OYE9J5GWANL2PPWMJBXmZNyDoAF3NUPdNFzI7PiPgE
        4KFc5VKvcjJCjrTwY7bFlwmLso0f0xJyLINyVddIoSK+wbz4BJCseqlnQUiPF+AYT7A/LjusyH6e4FjY
        0VQKVF4nJ77N5OMTQJLCQGV0MhTnC3bzBNVxWWI1qnlCcfYvKewNGYv0+ML9xieAftXz+q2KS8OCvMnj
        NpJANY/zpuKXj0+1u1xHfLGF4xWAWjfmsxG++QO8xnIZPnESOMByXiOg+L8e1U7zDTIFAEdVrfYdoCri
        4lA/m3mUXREKJlEIsItH2RzRG8JHlar1wZ0clZuhcg6oGLaoY37Uq7m4irX0SR+e0Sv1sZarYszizadO
        xRUPqOw1aE4yq/ALm/sCmTGvWMJTNEmvKj1SE09REjP/mbwgfEU/q+LrA2jBLD4QNPcMS4SumM6d7GRQ
        eoVpmQbZyZ2kC+V/CWcEr/oBs2RXP7h5iHYBY/v4ocIYgDIuKniaeunVplWq52kqhB04UvmhUDPYzkPm
        CPOXzSq6Yz4BL1Cs6qrpLGUdrdIrL97UyjqWCj77/6CY30T0BvpH6maVggOeJPJYFfUt0MMaykZ03bvZ
        QJNFPYcCNLGBu0e0S1oZa+iJ+vSvMtfua9k8xAeK7XaAUzxO4YivnM8tPM+H9EuvUDWpnw95nlvIH3G+
        C/k2NYrSH+ADHtLq6dfOsdDDdO7k00wi+2LLFKSL02xhHe/FGfsqgytYzCLmMMroQIqq8dHE+2znLU7E
        GQojmUruYQnjybxYT346qOF1XqVKq3UV2nqWJjGGmUyjhFT6aeQEBzitUVwwF7lUMI+ZzGIcWRFmFWQx
        SDed1HGQQ+yjWrPtclMYz2yuoAgvfZzjCB9Qr+USMn1ci5NwE9BppVsK+ZQynjIqmGkKEQxyiGpqOU09
        LTqFwdOtRE3kW66aFHJN0Q0KGLHJs4ODLlj5DTBEEjcwRaMWVw1+3pER0EFrzNCGxoefOfyX4flwcZZ7
        ZWfdYYjZMZZR6ZPWmmccLh7M8BEVL1W8bngT0MpaOmRnXAsSQQD9vMoZg++5k+2ys60NiSAA2MtaQyOO
        tPACzbIz7XA501V5JsWb1pAlO8MOw3HzVSGvBC3SESe2iRnJYY0h08ZtPJggDWfCMZUdulf/AM8lRvcv
        MVnCcZ0FsIFxsjPpEBk39wg7VKpPAbaawQnTIRpeHtDJmTTA28yTnT2H2Hj5Aqd0qP4tTvVbBQ//wvua
        9gh8vMwM2dlyEMdFJRvwaVT9zfyY0bKz5KCWUr6vapWdchrkPT6ves2+gynwciOv0BZHu3+aZ5iaAE4z
        Niafe3ljBCIIUMcabhBezOZgWlwUcScv8pHw0pJuDvA0C+3x4rfL6y2TKdzAAq5iFFkRllT7aOMM+9jJ
        Turii7thHewigKG85jCeaUyngvEUk0MebvpppoMz1HGCgxzjHL2yDTWS/wc1ZAg0u7p4igAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>